plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "com.github.ben-manes.versions" version "0.31.0"
    id "com.google.cloud.tools.jib" version "2.5.0"

}

version "0.4"
group "lidar"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "LidarSearch.micronaut.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    archiveFileName = "${ rootProject.name }-${ project.version }.jar"
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

mainClassName = 'LidarSearch.micronaut.Application'

jib {
    from {
        image = 'adoptopenjdk/openjdk13-openj9:jdk-13.0.2_8_openj9-0.18.0-alpine-slim'
    }
    to {
        image =  'nexus-docker-public-hosted.ossim.io/lidar-ui'
        tags = ['latest']
    }
    extraDirectories {
        paths {
            path {
                from = file('src/main/jib')
                into = "/app"
            }
            path {
                from = file('src/main/jib')
                into = "/app"
            }
        }
        permissions = [
            "/app/run_java.sh": "755"
        ]
    }
    containerizingMode = 'packaged'
    container {
        environment = [
            JAVA_APP_DIR: '/app',
            JAVA_MAIN_CLASS: mainClassName,
            JAVA_CLASSPATH: '/app/classpath/*:/app/libs/*',
            JAVA_OPTIONS: '-server -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -XshowSettings:vm -XX:+UseStringDeduplication '
        ]
        ports = ['8080']
        creationTime = 'USE_CURRENT_TIMESTAMP'
        entrypoint = ['/app/run_java.sh']
    }
}

